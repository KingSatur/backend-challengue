// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                   String          @id @default(uuid())
    email                String          @unique
    name                 String
    lastName             String
    role                 Role
    createdAt            DateTime        @default(now())
    updatedAt            DateTime        @updatedAt
    driverRidesDrived    Ride[]          @relation(name: "driver")
    clientRidesRequested Ride[]          @relation(name: "client")
    password             String
    currentLatitude      Decimal?
    currentLongitude     Decimal?
    phoneNumber          String
    phonePrefix          String
    city                 String
    state                String
    address              String
    PaymentMethod        PaymentMethod[]
}

model Ride {
    id                   String       @id @default(uuid())
    state                RideState    @default(STARTED)
    initialLatitude      Decimal
    initialLongitude     Decimal
    finalLatitude        Decimal?
    finalLongitude       Decimal?
    createdAt            DateTime     @default(now())
    updatedAt            DateTime?    @updatedAt
    clientId             String
    client               User         @relation(fields: [clientId], references: [id], name: "client")
    driverId             String
    driver               User         @relation(fields: [driverId], references: [id], name: "driver")
    totalAmount          Float?
    rideChanges          RideChange[]
    transactionId        String?
    transactionReference String?
}

model PaymentMethod {
    id        String  @id @default(uuid())
    preferred Boolean @default(false)
    wompiId   String
    userId    String
    token     String  @unique
    user      User    @relation(fields: [userId], references: [id])
}

model RideChange {
    id         String    @id @default(uuid())
    ride       Ride      @relation(fields: [rideId], references: [id])
    rideId     String
    lastStatus RideState
    newStatus  RideState
}

enum RideState {
    STARTED
    FINISHED
}

enum Role {
    RIDER
    DRIVER
}
